__version__ = (1, 2, 0)

import aiohttp
import logging
import time
from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class AlertsUa(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å—Ç–∞—Ç—É—Å—É –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥ –≤ –£–∫—Ä–∞—ó–Ω—ñ. –ê–≤—Ç–æ—Ä: X44TO (t.me/devx44to)"""

    strings = {
        "name": "AlertsUa by X44TO",
        "_cls_doc": "–ú–æ–¥—É–ª—å –¥–ª—è —Å—Ç–∞—Ç—É—Å—É –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥ –≤ –£–∫—Ä–∞—ó–Ω—ñ. –ê–≤—Ç–æ—Ä: X44TO (t.me/devx44to)",
        "no_token": "‚ùå <b>API —Ç–æ–∫–µ–Ω –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</b>\n–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π <code>.settoken [—Ç–æ–∫–µ–Ω]</code>",
        "checking": "üîÑ <b>–ü–µ—Ä–µ–≤—ñ—Ä—è—é —Ç—Ä–∏–≤–æ–≥–∏...</b>",
        "no_alerts": "‚úÖ <b>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥.</b>",
        "active_alerts": "üîî <b>–ê–∫—Ç–∏–≤–Ω—ñ —Ç—Ä–∏–≤–æ–≥–∏ (–æ–Ω–æ–≤–ª–µ–Ω–æ –æ {time}):</b>\n\n{list}",
        "alert_item": "üìç {location}\n   üïê –ü–æ—á–∞—Ç–æ–∫: {started_at}\n   üìù –ü—Ä–∏—á–∏–Ω–∞: {notes}\n   –¢–∏–ø: {type}",
        "status_oblast": "üìä <b>–°—Ç–∞—Ç—É—Å –ø–æ –æ–±–ª–∞—Å—Ç—è—Ö:</b>\n{status}",
        "status_item": "üìç {oblast}: {status}",
        "specific_status": "üìç <b>–°—Ç–∞—Ç—É—Å –¥–ª—è {location}:</b> {status}",
        "history": "üìú <b>–Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∏–≤–æ–≥ –∑–∞ –º—ñ—Å—è—Ü—å –¥–ª—è {location}:</b>\n\n{list}",
        "history_item": "üîî {started_at} - {finished_at or '–¢—Ä–∏–≤–∞—î'} ({type})",
        "error": "‚ùå <b>–ü–æ–º–∏–ª–∫–∞: {error}</b>",
        "set_token": "‚úÖ <b>–¢–æ–∫–µ–Ω –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.</b>",
        "invalid_uid": "‚ùå <b>–ù–µ–≤—ñ—Ä–Ω–∏–π UID –∞–±–æ –Ω–∞–∑–≤–∞ –æ–±–ª–∞—Å—Ç—ñ.</b>",
        "using_cache": "‚ÑπÔ∏è <b>–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ.</b>",
        "start_alerts": "‚ñ∂Ô∏è <b>–†–æ–∑–ø–æ—á–∞—Ç–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç—Ä–∏–≤–æ–≥ –∫–æ–∂–Ω—ñ —Ö–≤–∏–ª–∏–Ω—É.</b>",
        "stop_alerts": "‚èπÔ∏è <b>–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç—Ä–∏–≤–æ–≥ –∑—É–ø–∏–Ω–µ–Ω–æ.</b>",
        "already_running": "‚ÑπÔ∏è <b>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ.</b>",
        "not_running": "‚ÑπÔ∏è <b>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.</b>"
    }

    def __init__(self):
        self.token = None
        self.oblasts = [
            "–ê–≤—Ç–æ–Ω–æ–º–Ω–∞ –†–µ—Å–ø—É–±–ª—ñ–∫–∞ –ö—Ä–∏–º", "–í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–í—ñ–Ω–Ω–∏—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
            "–î–æ–Ω–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ó–∞–∫–∞—Ä–ø–∞—Ç—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
            "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–º. –ö–∏—ó–≤", "–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ö—ñ—Ä–æ–≤–æ–≥—Ä–∞–¥—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
            "–õ—É–≥–∞–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ú–∏–∫–æ–ª–∞—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–û–¥–µ—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
            "–ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–º. –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å", "–°—É–º—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
            "–¢–µ—Ä–Ω–æ–ø—ñ–ª—å—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–•–∞—Ä–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–•–µ—Ä—Å–æ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å",
            "–ß–µ—Ä–∫–∞—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ß–µ—Ä–Ω—ñ–≤–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å"
        ]
        self.uid_map = {name: i+1 for i, name in enumerate(self.oblasts)}
        self.cache = {}  # {endpoint: {"data": data, "timestamp": time}}
        self.cache_ttl = 300  # 5 —Ö–≤–∏–ª–∏–Ω
        self.alert_task = None  # –î–ª—è —Ü–∏–∫–ª—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        self.alert_msg_id = None  # ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
        self.alert_chat_id = None  # ID —á–∞—Ç—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.token = self.get("token", None)
        if not self.token:
            await utils.answer(self, self.strings["no_token"])

    def get_cached(self, endpoint: str):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ None, —è–∫—â–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª–æ."""
        if endpoint in self.cache:
            cached = self.cache[endpoint]
            if time.time() - cached["timestamp"] < self.cache_ttl:
                logger.debug(f"–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∫–µ—à –¥–ª—è {endpoint}")
                return cached["data"]
            else:
                del self.cache[endpoint]
        return None

    async def api_request(self,